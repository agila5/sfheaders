
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "geojsonsf"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('geojsonsf')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("df_geojson")
> ### * df_geojson
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: df_geojson
> ### Title: df to GeoJSON
> ### Aliases: df_geojson
> 
> ### ** Examples
> 
> 
> df <- data.frame(lon = c(1:5, NA), lat = c(1:5, NA), id = 1:6, val = letters[1:6])
> df_geojson( df, lon = "lon", lat = "lat")
{"type":"FeatureCollection","features":[{"type":"Feature","properties":{"id":1,"val":"a"},"geometry":{"type":"Point","coordinates":[1.0,1.0]}},{"type":"Feature","properties":{"id":2,"val":"b"},"geometry":{"type":"Point","coordinates":[2.0,2.0]}},{"type":"Feature","properties":{"id":3,"val":"c"},"geometry":{"type":"Point","coordinates":[3.0,3.0]}},{"type":"Feature","properties":{"id":4,"val":"d"},"geometry":{"type":"Point","coordinates":[4.0,4.0]}},{"type":"Feature","properties":{"id":5,"val":"e"},"geometry":{"type":"Point","coordinates":[5.0,5.0]}},{"type":"Feature","properties":{"id":6,"val":"f"},"geometry":null}]} 
> df_geojson( df, lon = "lon", lat = "lat", atomise = TRUE)
{"type":"Feature","properties":{"id":1,"val":"a"},"geometry":{"type":"Point","coordinates":[1.0,1.0]}} 
{"type":"Feature","properties":{"id":2,"val":"b"},"geometry":{"type":"Point","coordinates":[2.0,2.0]}} 
{"type":"Feature","properties":{"id":3,"val":"c"},"geometry":{"type":"Point","coordinates":[3.0,3.0]}} 
{"type":"Feature","properties":{"id":4,"val":"d"},"geometry":{"type":"Point","coordinates":[4.0,4.0]}} 
{"type":"Feature","properties":{"id":5,"val":"e"},"geometry":{"type":"Point","coordinates":[5.0,5.0]}} 
{"type":"Feature","properties":{"id":6,"val":"f"},"geometry":null} 
> 
> df <- data.frame(lon = c(1:5, NA), lat = c(1:5, NA) )
> df_geojson( df, lon = "lon", lat = "lat")
{"type":"Point","coordinates":[1.0,1.0]} 
{"type":"Point","coordinates":[2.0,2.0]} 
{"type":"Point","coordinates":[3.0,3.0]} 
{"type":"Point","coordinates":[4.0,4.0]} 
{"type":"Point","coordinates":[5.0,5.0]} 
null 
> df_geojson( df, lon = "lon", lat = "lat", simplify = FALSE)
{"type":"FeatureCollection","features":[{"type":"Feature","properties":{},"geometry":{"type":"Point","coordinates":[1.0,1.0]}},{"type":"Feature","properties":{},"geometry":{"type":"Point","coordinates":[2.0,2.0]}},{"type":"Feature","properties":{},"geometry":{"type":"Point","coordinates":[3.0,3.0]}},{"type":"Feature","properties":{},"geometry":{"type":"Point","coordinates":[4.0,4.0]}},{"type":"Feature","properties":{},"geometry":{"type":"Point","coordinates":[5.0,5.0]}},{"type":"Feature","properties":{},"geometry":null}]} 
> 
> df <- data.frame(lon = c(1:5), lat = c(1:5), elevation = c(1:5) )
> df_geojson( df, lon = "lon", lat = "lat", z = "elevation")
{"type":"Point","coordinates":[1.0,1.0,1.0]} 
{"type":"Point","coordinates":[2.0,2.0,2.0]} 
{"type":"Point","coordinates":[3.0,3.0,3.0]} 
{"type":"Point","coordinates":[4.0,4.0,4.0]} 
{"type":"Point","coordinates":[5.0,5.0,5.0]} 
> df_geojson( df, lon = "lon", lat = "lat", z = "elevation", simplify = FALSE)
{"type":"FeatureCollection","features":[{"type":"Feature","properties":{},"geometry":{"type":"Point","coordinates":[1.0,1.0,1.0]}},{"type":"Feature","properties":{},"geometry":{"type":"Point","coordinates":[2.0,2.0,2.0]}},{"type":"Feature","properties":{},"geometry":{"type":"Point","coordinates":[3.0,3.0,3.0]}},{"type":"Feature","properties":{},"geometry":{"type":"Point","coordinates":[4.0,4.0,4.0]}},{"type":"Feature","properties":{},"geometry":{"type":"Point","coordinates":[5.0,5.0,5.0]}}]} 
> 
> df <- data.frame(lon = c(1:5), lat = c(1:5), elevation = c(1:5), id = 1:5 )
> df_geojson( df, lon = "lon", lat = "lat", z = "elevation")
{"type":"FeatureCollection","features":[{"type":"Feature","properties":{"id":1},"geometry":{"type":"Point","coordinates":[1.0,1.0,1.0]}},{"type":"Feature","properties":{"id":2},"geometry":{"type":"Point","coordinates":[2.0,2.0,2.0]}},{"type":"Feature","properties":{"id":3},"geometry":{"type":"Point","coordinates":[3.0,3.0,3.0]}},{"type":"Feature","properties":{"id":4},"geometry":{"type":"Point","coordinates":[4.0,4.0,4.0]}},{"type":"Feature","properties":{"id":5},"geometry":{"type":"Point","coordinates":[5.0,5.0,5.0]}}]} 
> df_geojson( df, lon = "lon", lat = "lat", z = "elevation", atomise = TRUE)
{"type":"Feature","properties":{"id":1},"geometry":{"type":"Point","coordinates":[1.0,1.0,1.0]}} 
{"type":"Feature","properties":{"id":2},"geometry":{"type":"Point","coordinates":[2.0,2.0,2.0]}} 
{"type":"Feature","properties":{"id":3},"geometry":{"type":"Point","coordinates":[3.0,3.0,3.0]}} 
{"type":"Feature","properties":{"id":4},"geometry":{"type":"Point","coordinates":[4.0,4.0,4.0]}} 
{"type":"Feature","properties":{"id":5},"geometry":{"type":"Point","coordinates":[5.0,5.0,5.0]}} 
> 
> 
> ## to sf objects
> geo <- df_geojson( df, lon = "lon", lat = "lat", z = "elevation")
> sf <- geojson_sf( geo )
> 
> 
> 
> 
> cleanEx()
> nameEx("geojson_sf")
> ### * geojson_sf
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: geojson_sf
> ### Title: Geojson to sf
> ### Aliases: geojson_sf
> 
> ### ** Examples
> 
> 
> ## character string of GeoJSON
> 
> ## load 'sf' for print methods
> # library(sf)
> geojson <- '{ "type" : "Point", "coordinates" : [0, 0] }'
> geojson_sf(geojson)
  geometry
1     0, 0
> 
> 
> ## Not run: 
> ##D ## GeoJSON at a url
> ##D myurl <- "http://eric.clst.org/assets/wiki/uploads/Stuff/gz_2010_us_050_00_500k.json"
> ##D sf <- geojson_sf(myurl)
> ## End(Not run)
> 
> 
> 
> 
> cleanEx()
> nameEx("geojson_sfc")
> ### * geojson_sfc
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: geojson_sfc
> ### Title: Geojson to sfc
> ### Aliases: geojson_sfc
> 
> ### ** Examples
> 
> 
> ## character string of GeoJSON
> 
> ## load 'sf' for print methods
> # library(sf)
> geojson <- '{ "type":"Point","coordinates":[0,0] }'
> geojson_sfc(geojson)
[[1]]
[1] 0 0
attr(,"class")
[1] "XY"    "POINT" "sfg"  

attr(,"n_empty")
[1] 0
attr(,"crs")
$epsg
[1] 4326

$proj4string
[1] "+proj=longlat +datum=WGS84 +no_defs"

attr(,"class")
[1] "crs"
attr(,"class")
[1] "sfc_POINT" "sfc"      
attr(,"precision")
[1] 0
attr(,"bbox")
xmin ymin xmax ymax 
   0    0    0    0 
attr(,"class")
[1] "bbox"
attr(,"z_range")
zmin zmax 
  NA   NA 
attr(,"class")
[1] "z_range"
attr(,"m_range")
mmin mmax 
  NA   NA 
attr(,"class")
[1] "m_range"
> 
> geojson <- '[
+   { "type":"Point","coordinates":[0,0]},
+   {"type":"LineString","coordinates":[[0,0],[1,1]]}
+   ]'
> geojson_sfc( geojson )
[[1]]
[1] 0 0
attr(,"class")
[1] "XY"    "POINT" "sfg"  

[[2]]
     [,1] [,2]
[1,]    0    0
[2,]    1    1
attr(,"class")
[1] "XY"         "LINESTRING" "sfg"       

attr(,"classes")
[1] "POINT"      "LINESTRING"
attr(,"n_empty")
[1] 0
attr(,"crs")
$epsg
[1] 4326

$proj4string
[1] "+proj=longlat +datum=WGS84 +no_defs"

attr(,"class")
[1] "crs"
attr(,"class")
[1] "sfc_GEOMETRY" "sfc"         
attr(,"precision")
[1] 0
attr(,"bbox")
xmin ymin xmax ymax 
   0    0    1    1 
attr(,"class")
[1] "bbox"
attr(,"z_range")
zmin zmax 
   0    0 
attr(,"class")
[1] "z_range"
attr(,"m_range")
mmin mmax 
   0    0 
attr(,"class")
[1] "m_range"
> 
> ## Not run: 
> ##D ## GeoJSON at a url
> ##D myurl <- "http://eric.clst.org/assets/wiki/uploads/Stuff/gz_2010_us_050_00_500k.json"
> ##D sf <- geojson_sfc(myurl)
> ## End(Not run)
> 
> 
> 
> 
> cleanEx()
> nameEx("geojson_wkt")
> ### * geojson_wkt
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: geojson_wkt
> ### Title: Geojson to WKT
> ### Aliases: geojson_wkt
> 
> ### ** Examples
> 
> geojson <- '{ "type" : "Point", "coordinates" : [0, 0] }'
> geojson_wkt(geojson)
     geometry
1 POINT (0 0)
> 
> 
> 
> 
> cleanEx()
> nameEx("sf_geojson")
> ### * sf_geojson
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: sf_geojson
> ### Title: sf to GeoJSON
> ### Aliases: sf_geojson
> 
> ### ** Examples
> 
> ## Not run: 
> ##D library(sf)
> ##D sf <- sf::st_sf(geometry = sf::st_sfc(list(sf::st_point(c(0,0)), sf::st_point(c(1,1)))))
> ##D sf$id <- 1:2
> ##D sf_geojson(sf)
> ##D sf_geojson(sf, atomise = T)
> ##D 
> ##D ls <- st_linestring(rbind(c(0,0),c(1,1),c(2,1)))
> ##D mls <- st_multilinestring(list(rbind(c(2,2),c(1,3)), rbind(c(0,0),c(1,1),c(2,1))))
> ##D sfc <- st_sfc(ls,mls)
> ##D sf <- st_sf(sfc)
> ##D sf_geojson( sf )
> ##D sf_geojson( sf, simplify = FALSE )
> ##D 
> ## End(Not run)
> 
> 
> 
> 
> cleanEx()
> nameEx("sfc_geojson")
> ### * sfc_geojson
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: sfc_geojson
> ### Title: sfc to GeoJSON
> ### Aliases: sfc_geojson
> 
> ### ** Examples
> 
> ## Not run: 
> ##D library(sf)
> ##D sf <- sf::st_sfc(list(sf::st_point(c(0,0)), sf::st_point(c(1,1))))
> ##D sfc_geojson(sf)
> ## End(Not run)
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.295 0.023 0.344 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
